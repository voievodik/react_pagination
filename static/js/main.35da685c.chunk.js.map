{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onChangePage","lastPage","Math","ceil","pageList","isPrevBtnDisabled","isNextBtnDisabled","className","classnames","disabled","href","onClick","map","page","active","perPageSelector","items","App","useState","perPageItems","setPerPageItems","setCurrentPage","firstItem","lastItem","min","currentItems","slice","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAWd,EAhBD,EAgBuBW,GAEjCI,EAlBU,IAkBUN,EACpBO,EAAoBP,IAAgBE,EAc1C,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAzBa,WArBL,IAsBVZ,GACFC,EAAaD,EAAc,IAkBzB,oBAUDK,EAASQ,KAAI,SAAAC,GAAI,OAChB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAHvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArDa,WACdL,GACHN,EAAaD,EAAc,IA8CzB,wBCzEFgB,EAAkB,CAAC,EAAG,EAAG,GAAI,IAI7BC,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAwCC,mBAASH,EAAgB,IAAjE,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAPpB,GAOlB,mBAAOnB,EAAP,KAAoBsB,EAApB,KAEMC,EAAYvB,EAAcoB,EAAeA,EAAe,EACxDI,EAAWrB,KAAKsB,IAAIF,EAAYH,EAAe,EAXpC,IAYXM,EAAeT,EAAMU,MAAMJ,EAAY,EAAGC,GAEhD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACgDC,EADhD,eAlBa,GAkBb,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,OAC9BP,EA9BM,IAuBV,SAUGN,EAAgBH,KAAI,SAAAoB,GAAM,OACzB,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAhDW,GAiDXC,QAASqB,EACTpB,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAUQ,EAAeR,MAGzC,6BACGY,EAAab,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.35da685c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classnames from 'classnames';\nimport { getNumbers } from '../../utils';\n\nconst startPage = 1;\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onChangePage: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pageList = getNumbers(startPage, lastPage);\n\n  const isPrevBtnDisabled = currentPage === startPage;\n  const isNextBtnDisabled = currentPage === lastPage;\n\n  const increasePage = () => {\n    if (currentPage !== startPage) {\n      onChangePage(currentPage - 1);\n    }\n  };\n\n  const decreasePage = () => {\n    if (!isNextBtnDisabled) {\n      onChangePage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classnames(\n          'page-item',\n          { disabled: isPrevBtnDisabled },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevBtnDisabled}\n          onClick={increasePage}\n        >\n          «\n        </a>\n      </li>\n      {pageList.map(page => (\n        <li\n          className={classnames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onChangePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classnames(\n          'page-item',\n          { disabled: isNextBtnDisabled },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextBtnDisabled}\n          onClick={decreasePage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst perPageSelector = [3, 5, 10, 20];\nconst totalItems = 42;\nconst defaultPage = 1;\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPageItems, setPerPageItems] = useState(perPageSelector[1]);\n  const [currentPage, setCurrentPage] = useState(defaultPage);\n\n  const firstItem = currentPage * perPageItems - perPageItems + 1;\n  const lastItem = Math.min(firstItem + perPageItems - 1, totalItems);\n  const currentItems = items.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPageItems}\n            onChange={(event) => {\n              setPerPageItems(+event.target.value);\n              setCurrentPage(defaultPage);\n            }}\n          >\n            {perPageSelector.map(option => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPageItems}\n        currentPage={currentPage}\n        onChangePage={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}